// Code generated by goa v3.8.5, DO NOT EDIT.
//
// deployments service
//
// Command:
// $ goa gen github.com/acul009/control-mono/api/deployments/design

package deployments

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// used to manage active deployments
type Service interface {
	// Upsert implements upsert.
	Upsert(context.Context, *Deployment) (err error)
	// List implements list.
	List(context.Context) (res []string, err error)
	// Get implements get.
	Get(context.Context, string) (res *Deployment, err error)
	// Delete implements delete.
	Delete(context.Context, string) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "deployments"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"upsert", "list", "get", "delete"}

type Container struct {
	Name       string
	Image      string
	UsedParams []*ParameterUsage
	Services   []string
}

// Deployment is the payload type of the deployments service upsert method.
type Deployment struct {
	Name       string
	Containers []*Container
	Params     []*Parameter
}

type Parameter struct {
	Name   string
	Source string
	Type   string
}

type ParameterUsage struct {
	Name        *string
	Environment []string
	Files       []string
}

// MakeDeploymentNotFound builds a goa.ServiceError from an error.
func MakeDeploymentNotFound(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "DeploymentNotFound", false, false, false)
}
