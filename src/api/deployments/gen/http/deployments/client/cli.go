// Code generated by goa v3.8.5, DO NOT EDIT.
//
// deployments HTTP client CLI support package
//
// Command:
// $ goa gen github.com/acul009/control-mono/api/deployments/design

package client

import (
	"encoding/json"
	"fmt"

	deployments "github.com/acul009/control-mono/api/deployments/gen/deployments"
	goa "goa.design/goa/v3/pkg"
)

// BuildUpsertPayload builds the payload for the deployments upsert endpoint
// from CLI flags.
func BuildUpsertPayload(deploymentsUpsertBody string) (*deployments.Deployment, error) {
	var err error
	var body UpsertRequestBody
	{
		err = json.Unmarshal([]byte(deploymentsUpsertBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"containers\": [\n         {\n            \"image\": \"Quisquam sed.\",\n            \"name\": \"Dignissimos et nemo sunt commodi iste.\",\n            \"services\": [\n               \"Rem fugiat est.\",\n               \"Quas enim magnam libero consectetur qui nesciunt.\",\n               \"Quam libero.\"\n            ],\n            \"usedParams\": [\n               {\n                  \"environment\": [\n                     \"Voluptatem laboriosam perspiciatis est.\",\n                     \"Est veritatis.\",\n                     \"Quo aut recusandae.\",\n                     \"Temporibus asperiores et voluptatem a consequatur ut.\"\n                  ],\n                  \"files\": [\n                     \"Voluptatem necessitatibus labore aliquam consequatur est.\",\n                     \"Ullam voluptate esse.\",\n                     \"Aut et totam voluptatem quia illo voluptate.\"\n                  ],\n                  \"name\": \"z\"\n               },\n               {\n                  \"environment\": [\n                     \"Voluptatem laboriosam perspiciatis est.\",\n                     \"Est veritatis.\",\n                     \"Quo aut recusandae.\",\n                     \"Temporibus asperiores et voluptatem a consequatur ut.\"\n                  ],\n                  \"files\": [\n                     \"Voluptatem necessitatibus labore aliquam consequatur est.\",\n                     \"Ullam voluptate esse.\",\n                     \"Aut et totam voluptatem quia illo voluptate.\"\n                  ],\n                  \"name\": \"z\"\n               }\n            ]\n         },\n         {\n            \"image\": \"Quisquam sed.\",\n            \"name\": \"Dignissimos et nemo sunt commodi iste.\",\n            \"services\": [\n               \"Rem fugiat est.\",\n               \"Quas enim magnam libero consectetur qui nesciunt.\",\n               \"Quam libero.\"\n            ],\n            \"usedParams\": [\n               {\n                  \"environment\": [\n                     \"Voluptatem laboriosam perspiciatis est.\",\n                     \"Est veritatis.\",\n                     \"Quo aut recusandae.\",\n                     \"Temporibus asperiores et voluptatem a consequatur ut.\"\n                  ],\n                  \"files\": [\n                     \"Voluptatem necessitatibus labore aliquam consequatur est.\",\n                     \"Ullam voluptate esse.\",\n                     \"Aut et totam voluptatem quia illo voluptate.\"\n                  ],\n                  \"name\": \"z\"\n               },\n               {\n                  \"environment\": [\n                     \"Voluptatem laboriosam perspiciatis est.\",\n                     \"Est veritatis.\",\n                     \"Quo aut recusandae.\",\n                     \"Temporibus asperiores et voluptatem a consequatur ut.\"\n                  ],\n                  \"files\": [\n                     \"Voluptatem necessitatibus labore aliquam consequatur est.\",\n                     \"Ullam voluptate esse.\",\n                     \"Aut et totam voluptatem quia illo voluptate.\"\n                  ],\n                  \"name\": \"z\"\n               }\n            ]\n         }\n      ],\n      \"name\": \"Necessitatibus et autem placeat et.\",\n      \"params\": [\n         {\n            \"name\": \"bym\",\n            \"source\": \"static\",\n            \"type\": \"bool\"\n         },\n         {\n            \"name\": \"bym\",\n            \"source\": \"static\",\n            \"type\": \"bool\"\n         },\n         {\n            \"name\": \"bym\",\n            \"source\": \"static\",\n            \"type\": \"bool\"\n         }\n      ]\n   }'")
		}
		if body.Containers == nil {
			err = goa.MergeErrors(err, goa.MissingFieldError("containers", "body"))
		}
		if len(body.Containers) < 1 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("body.containers", body.Containers, len(body.Containers), 1, true))
		}
		for _, e := range body.Containers {
			if e != nil {
				if err2 := ValidateContainerRequestBody(e); err2 != nil {
					err = goa.MergeErrors(err, err2)
				}
			}
		}
		for _, e := range body.Params {
			if e != nil {
				if err2 := ValidateParameterRequestBody(e); err2 != nil {
					err = goa.MergeErrors(err, err2)
				}
			}
		}
		if err != nil {
			return nil, err
		}
	}
	v := &deployments.Deployment{
		Name: body.Name,
	}
	if body.Containers != nil {
		v.Containers = make([]*deployments.Container, len(body.Containers))
		for i, val := range body.Containers {
			v.Containers[i] = marshalContainerRequestBodyToDeploymentsContainer(val)
		}
	}
	if body.Params != nil {
		v.Params = make([]*deployments.Parameter, len(body.Params))
		for i, val := range body.Params {
			v.Params[i] = marshalParameterRequestBodyToDeploymentsParameter(val)
		}
	}

	return v, nil
}
